{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","user","setUsers","useEffect","fetch","then","response","json","data","results","className","RandomUser","props","DestructureData","Name","name","console","log","title","first","last","image","picture","Image","thumbnail","City","location","city","Country","country","style","backgroundColor","color","height","width","borderRadius","margin","padding","boxShadow","display","alignItems","src","alt","gender","email","phone","cell","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAuBeA,MApBf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACJC,EADI,KACEC,EADF,KAQX,OANAC,qBAAU,WACNC,MAAM,8BACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAASM,EAAKC,QAAQ,SAC3C,IAGC,sBAAKC,UAAU,MAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,qDAEJ,kCACI,cAACC,EAAD,CAAYH,KAAMP,UAQlC,SAASU,EAAWC,GAChB,IAgBMC,EAHWD,EAGgBJ,KAG3BM,EAAOD,GAAmBA,EAAgBE,KAChDC,QAAQC,IAAIH,GACZ,IAAMI,EAAQJ,GAAQA,EAAKI,MACrBC,EAAQL,GAAQA,EAAKK,MACrBC,EAAON,GAAQA,EAAKM,KAGpBC,EAAQR,GAAmBA,EAAgBS,QAC3CC,EAAQF,GAASA,EAAMG,UAGvBC,EAAOZ,GAAmBA,EAAgBa,SAC1CC,EAAOF,GAAQA,EAAKE,KACpBC,EAAUf,GAAmBA,EAAgBa,SAC7CG,EAAUD,GAAWA,EAAQC,QAEnC,OACI,sBAAKC,MApCS,CACdC,gBAAiB,cACjBC,MAAO,QACPC,OAAQ,QACRC,MAAO,QACPC,aAAc,OACdC,OAAQ,aACRC,QAAS,OACTC,UAAW,uBACXC,QAAS,OACTC,WAAY,UA0BZ,UACI,sBAAK9B,UAAU,aAAf,UACI,qBAAK+B,IAAKlB,EAAOmB,IAAI,KAErB,uCACUxB,EADV,IACkBC,EADlB,IAC0BC,KAE1B,2CAAcP,EAAgB8B,aAElC,sBAAKjC,UAAU,mBAAf,UACI,uCAAUiB,KACV,0CAAaE,KACb,wCAAWhB,EAAgB+B,SAC3B,wCAAW/B,EAAgBgC,SAC3B,uCAAUhC,EAAgBiC,cC5E1C,IAYeC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,K","file":"static/js/main.28dfb3db.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [user, setUsers] = useState([]);\n    useEffect(() => {\n        fetch('https://randomuser.me/api/')\n            .then((response) => response.json())\n            .then((data) => setUsers(data.results[0]));\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h3>Users Information</h3>\n            </header>\n            <section>\n                <RandomUser data={user} />\n            </section>\n        </div>\n    );\n}\n\nexport default App;\n\nfunction RandomUser(props) {\n    const UserStyle = {\n        backgroundColor: 'rgb(0,0,36)',\n        color: 'white',\n        height: '300px',\n        width: '550px',\n        borderRadius: '20px',\n        margin: ' 20px auto',\n        padding: '20px',\n        boxShadow: '10px 10px 10px black',\n        display: 'flex',\n        alignItems: 'center',\n    };\n    // Separate Data:\n    const fullData = props;\n\n    // Separate full Data\n    const DestructureData = fullData.data;\n\n    // // // Separate Name:\n    const Name = DestructureData && DestructureData.name;\n    console.log(Name);\n    const title = Name && Name.title;\n    const first = Name && Name.first;\n    const last = Name && Name.last;\n\n    // Image:\n    const image = DestructureData && DestructureData.picture;\n    const Image = image && image.thumbnail;\n\n    // location:\n    const City = DestructureData && DestructureData.location;\n    const city = City && City.city;\n    const Country = DestructureData && DestructureData.location;\n    const country = Country && Country.country;\n\n    return (\n        <div style={UserStyle}>\n            <div className=\"nameAndPic\">\n                <img src={Image} alt=\"\" />\n\n                <h2>\n                    Name:{title} {first} {last}\n                </h2>\n                <h3>Gender : {DestructureData.gender}</h3>\n            </div>\n            <div className=\"extrainformation\">\n                <h4>City:{city}</h4>\n                <h4>Country:{country}</h4>\n                <h4>Email:{DestructureData.email}</h4>\n                <h4>Phone:{DestructureData.phone}</h4>\n                <h4>Cell:{DestructureData.cell}</h4>\n            </div>\n        </div>\n    );\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}